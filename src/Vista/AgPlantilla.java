/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Modelo.Conexion;
import Modelo.CuentaDef;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Antonio Aranda
 */
public class AgPlantilla extends javax.swing.JFrame {

    /**
     * Creates new form AgPlantilla
     */
    public AgPlantilla() {
        initComponents();
        cargarLista("SELECT * FROM `cuenta`;");
        grupo_botones_uno.add(jRadioButton1);
        grupo_botones_uno.add(jRadioButton2);
        grupo_botones_dos.add(jRadioButton3);
        grupo_botones_dos.add(jRadioButton4);
        grupo_botones_dos.add(jRadioButton5);
        jButton2.setVisible(false);
        jRadioButton1.setSelected(true);
        jRadioButton5.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupo_botones_uno = new javax.swing.ButtonGroup();
        grupo_botones_dos = new javax.swing.ButtonGroup();
        jTextField2 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jTextField1 = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        txtNombre = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        jTextField2.setText("jTextField2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jRadioButton1.setText("Debe");

        jRadioButton2.setText("Haber");

        jRadioButton3.setText("Debito");

        jRadioButton4.setText("Credito");

        jRadioButton5.setText("Ninguno");

        jButton1.setText("Agregar cuenta");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Cuentas", "Debe", "Haber", "IVA"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton2.setText("Guardar Plantilla");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre de la plantilla");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox1, 0, 106, Short.MAX_VALUE)
                            .addComponent(jTextField1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton1)
                            .addComponent(jRadioButton2))
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton5)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jRadioButton4)
                                .addGap(37, 37, 37)
                                .addComponent(jButton1))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jRadioButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(35, 35, 35))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 587, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRadioButton2))
                        .addGap(39, 39, 39))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButton1)
                            .addComponent(jRadioButton3)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButton4)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        char validar = evt.getKeyChar();//obtiene el caracter de la tecla que presiona el usuario

        if (Character.isLetter(validar)) {
            cargarLista("SELECT * FROM `cuenta` WHERE `nombre_cuenta` LIKE '" + jTextField1.getText() + "%';");
            jComboBox1.setPopupVisible(true);
        } else {
            cargarLista("SELECT * FROM `cuenta` WHERE `codigo` = '" + jTextField1.getText() + "';");
            jComboBox1.setPopupVisible(true);
        }

        if (jTextField1.getText().toString().isEmpty()) {
            cargarLista("SELECT * FROM `cuenta`;");
            jComboBox1.setPopupVisible(true);
        }
        if (jTextField1.getText().toString().equals("Deudor") || jTextField1.getText().toString().equals("Acreedor")) {
            cargarLista("SELECT `id_cuenta`, `codigo`, `Nivel`, `nombre_cuenta`, `tipo_saldo` FROM `cuenta` WHERE `tipo_saldo` = '" + jTextField1.getText().toString() + "'");
            jComboBox1.setPopupVisible(true);
        }
        if (jTextField1.getText().toString().equals("ACTIVO") || jTextField1.getText().toString().equals("Activo") || jTextField1.getText().toString().equals("activo")) {
            cargarLista("SELECT `id_cuenta`, `codigo`, `Nivel`, `nombre_cuenta`, `tipo_saldo` FROM `cuenta` WHERE `codigo` LIKE '1%'");
            jComboBox1.setPopupVisible(true);
        }
        if (jTextField1.getText().toString().equals("PASIVO") || jTextField1.getText().toString().equals("Pasivo") || jTextField1.getText().toString().equals("pasivo")) {
            cargarLista("SELECT `id_cuenta`, `codigo`, `Nivel`, `nombre_cuenta`, `tipo_saldo` FROM `cuenta` WHERE `codigo` LIKE '2%'");
            jComboBox1.setPopupVisible(true);
        }
        if (jTextField1.getText().toString().equals("CAPITAL") || jTextField1.getText().toString().equals("Capital") || jTextField1.getText().toString().equals("capital")) {
            cargarLista("SELECT `id_cuenta`, `codigo`, `Nivel`, `nombre_cuenta`, `tipo_saldo` FROM `cuenta` WHERE `codigo` LIKE '3%'");
            jComboBox1.setPopupVisible(true);
        }
        if (jTextField1.getText().toString().equals("INGRESOS") || jTextField1.getText().toString().equals("Ingresos") || jTextField1.getText().toString().equals("ingresos")) {
            cargarLista("SELECT `id_cuenta`, `codigo`, `Nivel`, `nombre_cuenta`, `tipo_saldo` FROM `cuenta` WHERE `codigo` LIKE '5%'");
            jComboBox1.setPopupVisible(true);
        }
        if (jTextField1.getText().toString().equals("COSTOS") || jTextField1.getText().toString().equals("Costos") || jTextField1.getText().toString().equals("costos")) {
            cargarLista("SELECT `id_cuenta`, `codigo`, `Nivel`, `nombre_cuenta`, `tipo_saldo` FROM `cuenta` WHERE `codigo` LIKE '41%'");
            jComboBox1.setPopupVisible(true);
        }
        if (jTextField1.getText().toString().equals("GASTOS") || jTextField1.getText().toString().equals("Gastos") || jTextField1.getText().toString().equals("gastos")) {
            cargarLista("SELECT `id_cuenta`, `codigo`, `Nivel`, `nombre_cuenta`, `tipo_saldo` FROM `cuenta` WHERE `codigo` LIKE '42%'");
            jComboBox1.setPopupVisible(true);
        }
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // BOTON AGREGAR CUENTAS
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();

        //obtener codigo y nombre de cuenta
        String cuenta = "";
        char c;
        String codigo = "";
        String combo = "";

        combo = jComboBox1.getSelectedItem().toString();
        for (int i = 0; i < jComboBox1.getSelectedItem().toString().length(); i++) {
            c = combo.charAt(i);
            if (Character.isLetter(c)) {
                cuenta += String.valueOf(c);
            } else if (c == ' ') {
                cuenta += String.valueOf(c);
            } else {
                codigo += String.valueOf(c);
            }

        }

        //validar boton debe haber
        if (jRadioButton1.isSelected()) {

            //VALIDAR QUE BOTON DE IVA ESTA SELECCIONADO
            //debito
            if (jRadioButton3.isSelected()) {
                modelo.addRow(new Object[]{codigo, cuenta, "$", "", "Debito"});

            } else if (jRadioButton4.isSelected()) {//credito
                modelo.addRow(new Object[]{codigo, cuenta, "$", "", "Credito"});

            } else if (jRadioButton5.isSelected()) {//ninguno
                modelo.addRow(new Object[]{codigo, cuenta, "$", "", "Ninguno"});
            }

        } else if (jRadioButton2.isSelected()) {
            //VALIDAR QUE BOTON DE IVA ESTA SELECCIONADO
            //debito
            if (jRadioButton3.isSelected()) {
                modelo.addRow(new Object[]{codigo, cuenta, "", "$", "Debito"});

            } else if (jRadioButton4.isSelected()) {//credito
                modelo.addRow(new Object[]{codigo, cuenta, "", "$", "Credito"});
            } else if (jRadioButton5.isSelected()) {//ninguno
                modelo.addRow(new Object[]{codigo, cuenta, "", "$", "Ninguno"});
            }
        }
        jButton2.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //BOTON DE GUARDAR PLANTILLA
        if (guardarPlantilla()) {
            JOptionPane.showMessageDialog(null, "Plantilla guardada correctamente");
        } else {
            JOptionPane.showMessageDialog(null, "Error al guardar plantilla");

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgPlantilla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgPlantilla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgPlantilla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgPlantilla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgPlantilla().setVisible(true);
            }
        });
    }

    //####################################################################################################################3
    /*AQUI VAN TODAS LAS FUNCIONES*/
    public void cargarLista(String query) {

        int nivel;
        int otro_nivel;
        try {
            //Nueva conexion
            Conexion conecta = new Conexion();
            ResultSet rs, rs1;
            rs = conecta.Consulta(query, conecta.getConexion());

            //removemos todo del combo box
            jComboBox1.removeAllItems();

            //mientras halla otro dato en rs, añadimos a la combo box un resultado
            while (rs.next()) {
                nivel = Integer.parseInt(rs.getString(3));
                if (nivel > 2) {

                    jComboBox1.addItem(rs.getString(4) + rs.getString(2));
                }
            }
            //cerramos la conexion cerrando el resultado obtenido

            rs.close();
            conecta.close();

        } catch (SQLException ex) {
            Logger.getLogger(AgregarPartida.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public String[][] datosTabla(DefaultTableModel table) {
        int nRow = table.getRowCount(), nCol = table.getColumnCount();
        String[][] tableData = new String[nRow][nCol];
        for (int i = 0; i < nRow; i++) {
            for (int j = 0; j < nCol; j++) {
                tableData[i][j] = table.getValueAt(i, j).toString();
                //System.out.println(tableData[i][j]+"("+i+","+j+")");            
            }
        }
        return tableData;
    }

    public boolean guardarPlantilla() {
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();

        String datos[][] = datosTabla(modelo);
        String nombreP = "";
        String defaul = "";
        String codigoCD = "";
        boolean def = false;
        
        for (int i = 0; i < modelo.getRowCount(); i++) {
            if (datos[i][4].toString().equals("Debito") || datos[i][4].toString().equals("Credito")) {
                nombreP = datos[i][1];
                defaul = datos[i][4];//tipoIVA
                codigoCD = datos[i][0];//codigo de la cuenta default en la plantilla
                def = true;
                break;
            } else {
                def = false;//no encontro una cuenta default
            }
        }

        if (def) {
            Conexion con = new Conexion();
            con.Ejecutar("INSERT INTO `plantilla`(`IdPlantilla`, `NombrePlantilla`, `CuentaDefault`, `TipoIVA`) VALUES (NULL,'" + txtNombre.getText().toString() + "','" + codigoCD + "','" + defaul + "')");

            ResultSet rs = con.Consulta("SELECT * FROM `plantilla` order by `IdPlantilla` DESC limit 1 ", con.getConexion());

            String ultimo = "";
            try {
                if (rs.next()) {
                    ultimo = rs.getString("IdPlantilla");
                }
                con.close();
                rs.close();
            } catch (SQLException ex) {
                Logger.getLogger(AgPlantilla.class.getName()).log(Level.SEVERE, null, ex);
                return false;
            }

            String idCuenta = "";
            for (int i = 0; i < modelo.getRowCount(); i++) {
                rs = con.Consulta("SELECT `id_cuenta` FROM `cuenta` WHERE `codigo`= '" + datos[i][0] + "'", con.getConexion());
                try {
                    if (rs.next()) {
                        idCuenta = rs.getString("id_cuenta");
                    }
                    con.close();
                    rs.close();
                    con.Ejecutar("INSERT INTO `cuentaenplantilla`(`IdCuentaEnPlantilla`, `cuenta_id`, `Debe`, `Haber`, `Plantilla_id`) VALUES (NULL,'" + idCuenta + "','" + datos[i][2] + "','" + datos[i][3] + "','" + ultimo + "')");

                } catch (SQLException ex) {
                    Logger.getLogger(AgPlantilla.class.getName()).log(Level.SEVERE, null, ex);
                    return false;
                }
            }
        } else {
            CuentaDef cue = new CuentaDef();
            CuentaDefault CD = new CuentaDefault();
            CD.setVisible(true);
            CD.setLocationRelativeTo(null);
            CD.setDefaultCloseOperation(CD.DISPOSE_ON_CLOSE);

            cue.setTabla(datosTabla(modelo));//guardamos la tabla
            cue.setnFila(modelo.getRowCount());
            this.setVisible(false);
            this.dispose();

        }

        return true;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup grupo_botones_dos;
    private javax.swing.ButtonGroup grupo_botones_uno;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
